{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nfunction getImagesByQuery(query) {\n  const API_KEY = '44822574-4b43621c9303530917b2f490d';\n  return axios\n    .get(\n      `https://pixabay.com/api/?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true`\n    )\n    .then(response => {\n      return response.data;\n    });\n}\n\nexport default getImagesByQuery;\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst galleryBox = new SimpleLightbox('.gallery a');\nfunction showLoader() {\n  document.getElementById('loader').classList.add('is-visible');\n}\nfunction hideLoader() {\n  document.getElementById('loader').classList.remove('is-visible');\n}\n\nfunction createGallery(images) {\n  const gallery = document.querySelector('.gallery');\n  const galleryItems = images\n    .map(image => {\n      return `\n    <li class=\"gallery-item\" style=\"list-style-type: none;\">\n      <a class=\"gallery-link\" href=\"${image.largeImageURL}\">\n        <img class=\"gallery-image\" src=\"${image.webformatURL}\" alt=\"${image.tags}\"\n            style=\"width: 360px; height: 200px; flex-shrink: 0; font-size: 0;\" />\n      </a>\n      <div class=\"description\">\n      <p class=\"likes\"><strong>Likes</strong>${image.likes}</p>\n      <p class=\"views\"><strong>Views</strong>${image.views}</p>\n      <p class=\"comments\"><strong>Comments</strong>${image.comments}</p>\n      <p class=\"downloads\"><strong>Downloads</strong>${image.downloads}</p>\n      </div>\n\n    </li>\n  `;\n    })\n    .join('');\n\n  gallery.innerHTML = galleryItems;\n\n  galleryBox.refresh();\n  hideLoader();\n}\n\nexport default createGallery;\n","import getImagesByQuery from './js/pixabay-api';\nimport createGallery from './js/render-functions';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', imageSearch);\n\nfunction imageSearch(e) {\n  e.preventDefault();\n  const input = e.currentTarget;\n\n  const queryValue = input.elements['search-text'].value.toLowerCase();\n  getImagesByQuery(queryValue)\n    .then(data => {\n      if (data.hits.length === 0) {\n        return iziToast.error({\n          message: `Sorry, there are no images matching your ${queryValue}. Please try again!`,\n        });\n      }\n      return createGallery(data.hits);\n    })\n    .catch(err => console.log('error catch', err));\n\n  form.reset();\n}\n"],"names":["getImagesByQuery","query","axios","response","galleryBox","SimpleLightbox","hideLoader","createGallery","images","gallery","galleryItems","image","form","imageSearch","e","queryValue","data","iziToast","err"],"mappings":"+vBAEA,SAASA,EAAiBC,EAAO,CAE/B,OAAOC,EACJ,IACC,qEAA6CD,CAAK,0DACxD,EACK,KAAKE,GACGA,EAAS,IACjB,CACL,CCRA,MAAMC,EAAa,IAAIC,EAAe,YAAY,EAIlD,SAASC,GAAa,CACpB,SAAS,eAAe,QAAQ,EAAE,UAAU,OAAO,YAAY,CACjE,CAEA,SAASC,EAAcC,EAAQ,CAC7B,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAeF,EAClB,IAAIG,GACI;AAAA;AAAA,sCAEyBA,EAAM,aAAa;AAAA,0CACfA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA,+CAIjCA,EAAM,KAAK;AAAA,+CACXA,EAAM,KAAK;AAAA,qDACLA,EAAM,QAAQ;AAAA,uDACZA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA,GAKjE,EACA,KAAK,EAAE,EAEVF,EAAQ,UAAYC,EAEpBN,EAAW,QAAO,EAClBE,EAAU,CACZ,CChCA,MAAMM,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAUC,CAAW,EAE3C,SAASA,EAAYC,EAAG,CACtBA,EAAE,eAAc,EAGhB,MAAMC,EAFQD,EAAE,cAES,SAAS,aAAa,EAAE,MAAM,YAAW,EAClEd,EAAiBe,CAAU,EACxB,KAAKC,GACAA,EAAK,KAAK,SAAW,EAChBC,EAAS,MAAM,CACpB,QAAS,4CAA4CF,CAAU,qBACzE,CAAS,EAEIR,EAAcS,EAAK,IAAI,CAC/B,EACA,MAAME,GAAO,QAAQ,IAAI,cAAeA,CAAG,CAAC,EAE/CN,EAAK,MAAK,CACZ"}